/*! osc.js 2.4.4, Copyright 2023 Colin Clark | github.com/colinbdclark/osc.js */
var osc = osc || {}, osc = (!function() {
    "use strict";
    osc.SECS_70YRS = 2208988800, osc.TWO_32 = 4294967296, osc.defaults = {
        metadata: !1,
        unpackSingleArgs: !0
    }, osc.isCommonJS = !("undefined" == typeof module || !module.exports), osc.isNode = osc.isCommonJS && "undefined" == typeof window, 
    osc.isElectron = !("undefined" == typeof process || !process.versions || !process.versions.electron), 
    osc.isBufferEnv = osc.isNode || osc.isElectron, osc.isArray = function(t) {
        return t && "[object Array]" === Object.prototype.toString.call(t);
    }, osc.isTypedArrayView = function(t) {
        return t.buffer && t.buffer instanceof ArrayBuffer;
    }, osc.isBuffer = function(t) {
        return osc.isBufferEnv && t instanceof Buffer;
    }, osc.Long = "undefined" != typeof Long ? Long : osc.isNode ? require("long") : void 0, 
    osc.TextDecoder = "undefined" != typeof TextDecoder ? new TextDecoder("utf-8") : "undefined" != typeof util && (util.TextDecoder, 
    1) ? new util.TextDecoder("utf-8") : void 0, osc.TextEncoder = "undefined" != typeof TextEncoder ? new TextEncoder("utf-8") : "undefined" != typeof util && (util.TextEncoder, 
    1) ? new util.TextEncoder("utf-8") : void 0, osc.dataView = function(t, e, r) {
        return t.buffer ? new DataView(t.buffer, e, r) : t instanceof ArrayBuffer ? new DataView(t, e, r) : new DataView(new Uint8Array(t), e, r);
    }, osc.byteArray = function(t) {
        if (t instanceof Uint8Array) return t;
        var e = t.buffer || t;
        if (e instanceof ArrayBuffer || void 0 !== e.length && "string" != typeof e) return new Uint8Array(e);
        throw new Error("Can't wrap a non-array-like object as Uint8Array. Object was: " + JSON.stringify(t, null, 2));
    }, osc.nativeBuffer = function(t) {
        return osc.isBufferEnv ? osc.isBuffer(t) ? t : Buffer.from(t.buffer ? t : new Uint8Array(t)) : osc.isTypedArrayView(t) ? t : new Uint8Array(t);
    }, osc.copyByteArray = function(t, e, r) {
        if (osc.isTypedArrayView(t) && osc.isTypedArrayView(e)) e.set(t, r); else for (var i = void 0 === r ? 0 : r, n = Math.min(e.length - r, t.length), s = 0, o = i; s < n; s++, 
        o++) e[o] = t[s];
        return e;
    }, osc.readString = function(t, e) {
        for (var r = [], i = e.idx; i < t.byteLength; i++) {
            var n = t.getUint8(i);
            if (0 === n) {
                i++;
                break;
            }
            r.push(n);
        }
        return e.idx = i = i + 3 & -4, (osc.isBufferEnv ? osc.readString.withBuffer : osc.TextDecoder ? osc.readString.withTextDecoder : osc.readString.raw)(r);
    }, osc.readString.raw = function(t) {
        for (var e = "", r = 0; r < t.length; r += 1e4) e += String.fromCharCode.apply(null, t.slice(r, r + 1e4));
        return e;
    }, osc.readString.withTextDecoder = function(t) {
        t = new Int8Array(t);
        return osc.TextDecoder.decode(t);
    }, osc.readString.withBuffer = function(t) {
        return Buffer.from(t).toString("utf-8");
    }, osc.writeString = function(t) {
        for (var e, r = osc.isBufferEnv ? osc.writeString.withBuffer : osc.TextEncoder ? osc.writeString.withTextEncoder : null, i = t + "\0", n = (r && (e = r(i)), 
        (r ? e : i).length), s = new Uint8Array(n + 3 & -4), o = 0; o < n - 1; o++) {
            var c = r ? e[o] : i.charCodeAt(o);
            s[o] = c;
        }
        return s;
    }, osc.writeString.withTextEncoder = function(t) {
        return osc.TextEncoder.encode(t);
    }, osc.writeString.withBuffer = function(t) {
        return Buffer.from(t);
    }, osc.readPrimitive = function(t, e, r, i) {
        t = t[e](i.idx, !1);
        return i.idx += r, t;
    }, osc.writePrimitive = function(t, e, r, i, n) {
        var s;
        return n = void 0 === n ? 0 : n, e ? s = new Uint8Array(e.buffer) : (s = new Uint8Array(i), 
        e = new DataView(s.buffer)), e[r](n, t, !1), s;
    }, osc.readInt32 = function(t, e) {
        return osc.readPrimitive(t, "getInt32", 4, e);
    }, osc.writeInt32 = function(t, e, r) {
        return osc.writePrimitive(t, e, "setInt32", 4, r);
    }, osc.readInt64 = function(t, e) {
        var r = osc.readPrimitive(t, "getInt32", 4, e), t = osc.readPrimitive(t, "getInt32", 4, e);
        return osc.Long ? new osc.Long(t, r) : {
            high: r,
            low: t,
            unsigned: !1
        };
    }, osc.writeInt64 = function(t, e, r) {
        var i = new Uint8Array(8);
        return i.set(osc.writePrimitive(t.high, e, "setInt32", 4, r), 0), i.set(osc.writePrimitive(t.low, e, "setInt32", 4, r + 4), 4), 
        i;
    }, osc.readFloat32 = function(t, e) {
        return osc.readPrimitive(t, "getFloat32", 4, e);
    }, osc.writeFloat32 = function(t, e, r) {
        return osc.writePrimitive(t, e, "setFloat32", 4, r);
    }, osc.readFloat64 = function(t, e) {
        return osc.readPrimitive(t, "getFloat64", 8, e);
    }, osc.writeFloat64 = function(t, e, r) {
        return osc.writePrimitive(t, e, "setFloat64", 8, r);
    }, osc.readChar32 = function(t, e) {
        t = osc.readPrimitive(t, "getUint32", 4, e);
        return String.fromCharCode(t);
    }, osc.writeChar32 = function(t, e, r) {
        t = t.charCodeAt(0);
        if (!(void 0 === t || t < -1)) return osc.writePrimitive(t, e, "setUint32", 4, r);
    }, osc.readBlob = function(t, e) {
        var r = osc.readInt32(t, e), i = r + 3 & -4, t = new Uint8Array(t.buffer, e.idx, r);
        return e.idx += i, t;
    }, osc.writeBlob = function(t) {
        var e = (t = osc.byteArray(t)).byteLength, r = new Uint8Array(4 + (e + 3 & -4)), i = new DataView(r.buffer);
        return osc.writeInt32(e, i), r.set(t, 4), r;
    }, osc.readMIDIBytes = function(t, e) {
        t = new Uint8Array(t.buffer, e.idx, 4);
        return e.idx += 4, t;
    }, osc.writeMIDIBytes = function(t) {
        t = osc.byteArray(t);
        var e = new Uint8Array(4);
        return e.set(t), e;
    }, osc.readColor = function(t, e) {
        var t = new Uint8Array(t.buffer, e.idx, 4), r = t[3] / 255;
        return e.idx += 4, {
            r: t[0],
            g: t[1],
            b: t[2],
            a: r
        };
    }, osc.writeColor = function(t) {
        var e = Math.round(255 * t.a);
        return new Uint8Array([ t.r, t.g, t.b, e ]);
    }, osc.readTrue = function() {
        return !0;
    }, osc.readFalse = function() {
        return !1;
    }, osc.readNull = function() {
        return null;
    }, osc.readImpulse = function() {
        return 1;
    }, osc.readTimeTag = function(t, e) {
        var r = osc.readPrimitive(t, "getUint32", 4, e), t = osc.readPrimitive(t, "getUint32", 4, e);
        return {
            raw: [ r, t ],
            native: 0 === r && 1 === t ? Date.now() : osc.ntpToJSTime(r, t)
        };
    }, osc.writeTimeTag = function(t) {
        var t = t.raw || osc.jsToNTPTime(t.native), e = new Uint8Array(8), r = new DataView(e.buffer);
        return osc.writeInt32(t[0], r, 0), osc.writeInt32(t[1], r, 4), e;
    }, osc.timeTag = function(t, e) {
        t = t || 0;
        var e = (e = e || Date.now()) / 1e3, r = Math.floor(e), e = e - r, i = Math.floor(t), e = e + (t - i);
        return 1 < e && (i += t = Math.floor(e), e = e - t), {
            raw: [ r + i + osc.SECS_70YRS, Math.round(osc.TWO_32 * e) ]
        };
    }, osc.ntpToJSTime = function(t, e) {
        return 1e3 * (t - osc.SECS_70YRS + e / osc.TWO_32);
    }, osc.jsToNTPTime = function(t) {
        var t = t / 1e3, e = Math.floor(t);
        return [ e + osc.SECS_70YRS, Math.round(osc.TWO_32 * (t - e)) ];
    }, osc.readArguments = function(t, e, r) {
        var i = osc.readString(t, r);
        if (0 !== i.indexOf(",")) throw new Error("A malformed type tag string was found while reading the arguments of an OSC message. String was: " + i, " at offset: " + r.idx);
        var n = i.substring(1).split(""), s = [];
        return osc.readArgumentsIntoArray(s, n, i, t, e, r), s;
    }, osc.readArgument = function(t, e, r, i, n) {
        var s = osc.argumentTypes[t];
        if (s) return s = s.reader, s = osc[s](r, n), i.metadata ? {
            type: t,
            value: s
        } : s;
        throw new Error("'" + t + "' is not a valid OSC type tag. Type tag string was: " + e);
    }, osc.readArgumentsIntoArray = function(t, e, r, i, n, s) {
        for (var o = 0; o < e.length; ) {
            var c = e[o];
            if ("[" === c) {
                var a = e.slice(o + 1), u = a.indexOf("]");
                if (u < 0) throw new Error("Invalid argument type tag: an open array type tag ('[') was found without a matching close array tag ('[]'). Type tag was: " + r);
                a = a.slice(0, u), a = osc.readArgumentsIntoArray([], a, r, i, n, s);
                o += u + 2;
            } else a = osc.readArgument(c, r, i, n, s), o++;
            t.push(a);
        }
        return t;
    }, osc.writeArguments = function(t, e) {
        t = osc.collectArguments(t, e);
        return osc.joinParts(t);
    }, osc.joinParts = function(t) {
        for (var e = new Uint8Array(t.byteLength), r = t.parts, i = 0, n = 0; n < r.length; n++) {
            var s = r[n];
            osc.copyByteArray(s, e, i), i += s.length;
        }
        return e;
    }, osc.addDataPart = function(t, e) {
        e.parts.push(t), e.byteLength += t.length;
    }, osc.writeArrayArguments = function(t, e) {
        for (var r = "[", i = 0; i < t.length; i++) {
            var n = t[i];
            r += osc.writeArgument(n, e);
        }
        return r += "]";
    }, osc.writeArgument = function(t, e) {
        var r;
        return osc.isArray(t) ? osc.writeArrayArguments(t, e) : (r = t.type, (r = osc.argumentTypes[r].writer) && (r = osc[r](t.value), 
        osc.addDataPart(r, e)), t.type);
    }, osc.collectArguments = function(t, e, r) {
        osc.isArray(t) || (t = void 0 === t ? [] : [ t ]), r = r || {
            byteLength: 0,
            parts: []
        }, e.metadata || (t = osc.annotateArguments(t));
        for (var i = ",", e = r.parts.length, n = 0; n < t.length; n++) {
            var s = t[n];
            i += osc.writeArgument(s, r);
        }
        var o = osc.writeString(i);
        return r.byteLength += o.byteLength, r.parts.splice(e, 0, o), r;
    }, osc.readMessage = function(t, e, r) {
        e = e || osc.defaults;
        var t = osc.dataView(t, t.byteOffset, t.byteLength), i = osc.readString(t, r = r || {
            idx: 0
        });
        return osc.readMessageContents(i, t, e, r);
    }, osc.readMessageContents = function(t, e, r, i) {
        if (0 !== t.indexOf("/")) throw new Error("A malformed OSC address was found while reading an OSC message. String was: " + t);
        e = osc.readArguments(e, r, i);
        return {
            address: t,
            args: 1 === e.length && r.unpackSingleArgs ? e[0] : e
        };
    }, osc.collectMessageParts = function(t, e, r) {
        return r = r || {
            byteLength: 0,
            parts: []
        }, osc.addDataPart(osc.writeString(t.address), r), osc.collectArguments(t.args, e, r);
    }, osc.writeMessage = function(t, e) {
        if (e = e || osc.defaults, osc.isValidMessage(t)) return e = osc.collectMessageParts(t, e), 
        osc.joinParts(e);
        throw new Error("An OSC message must contain a valid address. Message was: " + JSON.stringify(t, null, 2));
    }, osc.isValidMessage = function(t) {
        return t.address && 0 === t.address.indexOf("/");
    }, osc.readBundle = function(t, e, r) {
        return osc.readPacket(t, e, r);
    }, osc.collectBundlePackets = function(t, e, r) {
        r = r || {
            byteLength: 0,
            parts: []
        }, osc.addDataPart(osc.writeString("#bundle"), r), osc.addDataPart(osc.writeTimeTag(t.timeTag), r);
        for (var i = 0; i < t.packets.length; i++) {
            var n = t.packets[i], n = (n.address ? osc.collectMessageParts : osc.collectBundlePackets)(n, e);
            r.byteLength += n.byteLength, osc.addDataPart(osc.writeInt32(n.byteLength), r), 
            r.parts = r.parts.concat(n.parts);
        }
        return r;
    }, osc.writeBundle = function(t, e) {
        if (!osc.isValidBundle(t)) throw new Error("An OSC bundle must contain 'timeTag' and 'packets' properties. Bundle was: " + JSON.stringify(t, null, 2));
        e = e || osc.defaults;
        t = osc.collectBundlePackets(t, e);
        return osc.joinParts(t);
    }, osc.isValidBundle = function(t) {
        return void 0 !== t.timeTag && void 0 !== t.packets;
    }, osc.readBundleContents = function(t, e, r, i) {
        for (var n = osc.readTimeTag(t, r), s = []; r.idx < i; ) {
            var o = osc.readInt32(t, r), o = r.idx + o, o = osc.readPacket(t, e, r, o);
            s.push(o);
        }
        return {
            timeTag: n,
            packets: s
        };
    }, osc.readPacket = function(t, e, r, i) {
        var t = osc.dataView(t, t.byteOffset, t.byteLength), n = (i = void 0 === i ? t.byteLength : i, 
        osc.readString(t, r = r || {
            idx: 0
        })), s = n[0];
        if ("#" === s) return osc.readBundleContents(t, e, r, i);
        if ("/" === s) return osc.readMessageContents(n, t, e, r);
        throw new Error("The header of an OSC packet didn't contain an OSC address or a #bundle string. Header was: " + n);
    }, osc.writePacket = function(t, e) {
        if (osc.isValidMessage(t)) return osc.writeMessage(t, e);
        if (osc.isValidBundle(t)) return osc.writeBundle(t, e);
        throw new Error("The specified packet was not recognized as a valid OSC message or bundle. Packet was: " + JSON.stringify(t, null, 2));
    }, osc.argumentTypes = {
        i: {
            reader: "readInt32",
            writer: "writeInt32"
        },
        h: {
            reader: "readInt64",
            writer: "writeInt64"
        },
        f: {
            reader: "readFloat32",
            writer: "writeFloat32"
        },
        s: {
            reader: "readString",
            writer: "writeString"
        },
        S: {
            reader: "readString",
            writer: "writeString"
        },
        b: {
            reader: "readBlob",
            writer: "writeBlob"
        },
        t: {
            reader: "readTimeTag",
            writer: "writeTimeTag"
        },
        T: {
            reader: "readTrue"
        },
        F: {
            reader: "readFalse"
        },
        N: {
            reader: "readNull"
        },
        I: {
            reader: "readImpulse"
        },
        d: {
            reader: "readFloat64",
            writer: "writeFloat64"
        },
        c: {
            reader: "readChar32",
            writer: "writeChar32"
        },
        r: {
            reader: "readColor",
            writer: "writeColor"
        },
        m: {
            reader: "readMIDIBytes",
            writer: "writeMIDIBytes"
        }
    }, osc.inferTypeForArgument = function(t) {
        switch (typeof t) {
          case "boolean":
            return t ? "T" : "F";

          case "string":
            return "s";

          case "number":
            return "f";

          case "undefined":
            return "N";

          case "object":
            if (null === t) return "N";
            if (t instanceof Uint8Array || t instanceof ArrayBuffer) return "b";
            if ("number" == typeof t.high && "number" == typeof t.low) return "h";
        }
        throw new Error("Can't infer OSC argument type for value: " + JSON.stringify(t, null, 2));
    }, osc.annotateArguments = function(t) {
        for (var e = [], r = 0; r < t.length; r++) {
            var i = t[r];
            i = "object" == typeof i && i.type && void 0 !== i.value ? i : osc.isArray(i) ? osc.annotateArguments(i) : {
                type: osc.inferTypeForArgument(i),
                value: i
            }, e.push(i);
        }
        return e;
    }, osc.isCommonJS && (module.exports = osc);
}(), !function(t, e) {
    "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports.Long = e() : t.Long = e();
}("undefined" != typeof self ? self : this, function() {
    return r = [ function(t, e) {
        function i(t, e, r) {
            this.low = 0 | t, this.high = 0 | e, this.unsigned = !!r;
        }
        function d(t) {
            return !0 === (t && t.__isLong__);
        }
        function r(t, e) {
            var r, i, n;
            return e ? (n = 0 <= (t >>>= 0) && t < 256) && (i = o[t]) ? i : (r = g(t, (0 | t) < 0 ? -1 : 0, !0), 
            n && (o[t] = r), r) : (n = -128 <= (t |= 0) && t < 128) && (i = s[t]) ? i : (r = g(t, t < 0 ? -1 : 0, !1), 
            n && (s[t] = r), r);
        }
        function l(t, e) {
            if (isNaN(t)) return e ? f : y;
            if (e) {
                if (t < 0) return f;
                if (c <= t) return P;
            } else {
                if (t <= -a) return A;
                if (a <= t + 1) return E;
            }
            return t < 0 ? l(-t, e).neg() : g(t % n | 0, t / n | 0, e);
        }
        function g(t, e, r) {
            return new i(t, e, r);
        }
        function u(t, e, r) {
            if (0 === t.length) throw Error("empty string");
            if ("NaN" === t || "Infinity" === t || "+Infinity" === t || "-Infinity" === t) return y;
            if (e = "number" == typeof e ? (r = e, !1) : !!e, (r = r || 10) < 2 || 36 < r) throw RangeError("radix");
            var i;
            if (0 < (i = t.indexOf("-"))) throw Error("interior hyphen");
            if (0 === i) return u(t.substring(1), e, r).neg();
            for (var n = l(h(r, 8)), s = y, o = 0; o < t.length; o += 8) {
                var c = Math.min(8, t.length - o), a = parseInt(t.substring(o, o + c), r);
                s = (c < 8 ? (c = l(h(r, c)), s.mul(c)) : s = s.mul(n)).add(l(a));
            }
            return s.unsigned = e, s;
        }
        function p(t, e) {
            return "number" == typeof t ? l(t, e) : "string" == typeof t ? u(t, e) : g(t.low, t.high, "boolean" == typeof e ? e : t.unsigned);
        }
        t.exports = i;
        var m = null;
        try {
            m = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([ 0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11 ])), {}).exports;
        } catch (t) {}
        Object.defineProperty(i.prototype, "__isLong__", {
            value: !0
        }), i.isLong = d;
        var s = {}, o = {}, h = (i.fromInt = r, i.fromNumber = l, i.fromBits = g, 
        Math.pow), n = (i.fromString = u, i.fromValue = p, 4294967296), c = n * n, a = c / 2, w = r(1 << 24), y = r(0), f = (i.ZERO = y, 
        r(0, !0)), v = (i.UZERO = f, r(1)), b = (i.ONE = v, r(1, !0)), S = (i.UONE = b, 
        r(-1)), E = (i.NEG_ONE = S, g(-1, 2147483647, !1)), P = (i.MAX_VALUE = E, 
        g(-1, -1, !0)), A = (i.MAX_UNSIGNED_VALUE = P, g(0, -2147483648, !1)), I = (i.MIN_VALUE = A, 
        i.prototype);
        I.toInt = function() {
            return this.unsigned ? this.low >>> 0 : this.low;
        }, I.toNumber = function() {
            return this.unsigned ? (this.high >>> 0) * n + (this.low >>> 0) : this.high * n + (this.low >>> 0);
        }, I.toString = function(t) {
            if ((t = t || 10) < 2 || 36 < t) throw RangeError("radix");
            if (this.isZero()) return "0";
            var e, r;
            if (this.isNegative()) return this.eq(A) ? (r = l(t), r = (e = this.div(r)).mul(r).sub(this), 
            e.toString(t) + r.toInt().toString(t)) : "-" + this.neg().toString(t);
            for (var i = l(h(t, 6), this.unsigned), n = this, s = ""; ;) {
                var o = n.div(i), c = (n.sub(o.mul(i)).toInt() >>> 0).toString(t);
                if ((n = o).isZero()) return c + s;
                for (;c.length < 6; ) c = "0" + c;
                s = "" + c + s;
            }
        }, I.getHighBits = function() {
            return this.high;
        }, I.getHighBitsUnsigned = function() {
            return this.high >>> 0;
        }, I.getLowBits = function() {
            return this.low;
        }, I.getLowBitsUnsigned = function() {
            return this.low >>> 0;
        }, I.getNumBitsAbs = function() {
            if (this.isNegative()) return this.eq(A) ? 64 : this.neg().getNumBitsAbs();
            for (var t = 0 != this.high ? this.high : this.low, e = 31; 0 < e && 0 == (t & 1 << e); e--);
            return 0 != this.high ? e + 33 : e + 1;
        }, I.isZero = function() {
            return 0 === this.high && 0 === this.low;
        }, I.eqz = I.isZero, I.isNegative = function() {
            return !this.unsigned && this.high < 0;
        }, I.isPositive = function() {
            return this.unsigned || 0 <= this.high;
        }, I.isOdd = function() {
            return 1 == (1 & this.low);
        }, I.isEven = function() {
            return 0 == (1 & this.low);
        }, I.equals = function(t) {
            return d(t) || (t = p(t)), (this.unsigned === t.unsigned || this.high >>> 31 != 1 || t.high >>> 31 != 1) && this.high === t.high && this.low === t.low;
        }, I.eq = I.equals, I.notEquals = function(t) {
            return !this.eq(t);
        }, I.neq = I.notEquals, I.ne = I.notEquals, I.lessThan = function(t) {
            return this.comp(t) < 0;
        }, I.lt = I.lessThan, I.lessThanOrEqual = function(t) {
            return this.comp(t) <= 0;
        }, I.lte = I.lessThanOrEqual, I.le = I.lessThanOrEqual, I.greaterThan = function(t) {
            return 0 < this.comp(t);
        }, I.gt = I.greaterThan, I.greaterThanOrEqual = function(t) {
            return 0 <= this.comp(t);
        }, I.gte = I.greaterThanOrEqual, I.ge = I.greaterThanOrEqual, I.compare = function(t) {
            var e, r;
            return d(t) || (t = p(t)), this.eq(t) ? 0 : (e = this.isNegative(), 
            r = t.isNegative(), e && !r ? -1 : !e && r ? 1 : this.unsigned ? t.high >>> 0 > this.high >>> 0 || t.high === this.high && t.low >>> 0 > this.low >>> 0 ? -1 : 1 : this.sub(t).isNegative() ? -1 : 1);
        }, I.comp = I.compare, I.negate = function() {
            return !this.unsigned && this.eq(A) ? A : this.not().add(v);
        }, I.neg = I.negate, I.add = function(t) {
            d(t) || (t = p(t));
            var e = this.high >>> 16, r = 65535 & this.high, i = this.low >>> 16, n = 65535 & this.low, s = t.high >>> 16, o = 65535 & t.high, c = t.low >>> 16, a = 0, u = 0, h = 0, f = 0;
            return u += (h = h + ((f += n + (65535 & t.low)) >>> 16) + (i + c)) >>> 16, 
            g((h &= 65535) << 16 | (f &= 65535), ((a += (u += r + o) >>> 16) + (e + s) & 65535) << 16 | (u &= 65535), this.unsigned);
        }, I.subtract = function(t) {
            return d(t) || (t = p(t)), this.add(t.neg());
        }, I.sub = I.subtract, I.multiply = function(t) {
            var e, r, i, n, s, o, c, a, u, h, f;
            return this.isZero() ? y : (d(t) || (t = p(t)), m ? g(m.mul(this.low, this.high, t.low, t.high), m.get_high(), this.unsigned) : t.isZero() ? y : this.eq(A) ? t.isOdd() ? A : y : t.eq(A) ? this.isOdd() ? A : y : this.isNegative() ? t.isNegative() ? this.neg().mul(t.neg()) : this.neg().mul(t).neg() : t.isNegative() ? this.mul(t.neg()).neg() : this.lt(w) && t.lt(w) ? l(this.toNumber() * t.toNumber(), this.unsigned) : (e = this.high >>> 16, 
            r = 65535 & this.high, i = this.low >>> 16, n = 65535 & this.low, s = t.high >>> 16, 
            o = 65535 & t.high, c = t.low >>> 16, f = (f = h = u = a = 0) + ((u = u + ((h += n * (t = 65535 & t.low)) >>> 16) + i * t) >>> 16) + ((u = (u & 65535) + n * c) >>> 16), 
            g((u &= 65535) << 16 | (h &= 65535), (a = (a = (a += (f += r * t) >>> 16) + ((f = (f & 65535) + i * c) >>> 16) + ((f = (f & 65535) + n * o) >>> 16)) + (e * t + r * c + i * o + n * s) & 65535) << 16 | (f &= 65535), this.unsigned)));
        }, I.mul = I.multiply, I.divide = function(t) {
            if ((t = d(t) ? t : p(t)).isZero()) throw Error("division by zero");
            if (m) return this.unsigned || -2147483648 !== this.high || -1 !== t.low || -1 !== t.high ? g((this.unsigned ? m.div_u : m.div_s)(this.low, this.high, t.low, t.high), m.get_high(), this.unsigned) : this;
            if (this.isZero()) return this.unsigned ? f : y;
            var e, r;
            if (this.unsigned) {
                if ((t = t.unsigned ? t : t.toUnsigned()).gt(this)) return f;
                if (t.gt(this.shru(1))) return b;
                r = f;
            } else {
                if (this.eq(A)) return t.eq(v) || t.eq(S) ? A : t.eq(A) ? v : (i = this.shr(1).div(t).shl(1)).eq(y) ? t.isNegative() ? v : S : (e = this.sub(t.mul(i)), 
                i.add(e.div(t)));
                if (t.eq(A)) return this.unsigned ? f : y;
                if (this.isNegative()) return t.isNegative() ? this.neg().div(t.neg()) : this.neg().div(t).neg();
                if (t.isNegative()) return this.div(t.neg()).neg();
                r = y;
            }
            for (e = this; e.gte(t); ) {
                for (var i = Math.max(1, Math.floor(e.toNumber() / t.toNumber())), n = Math.ceil(Math.log(i) / Math.LN2), s = n <= 48 ? 1 : h(2, n - 48), o = l(i), c = o.mul(t); c.isNegative() || c.gt(e); ) c = (o = l(i -= s, this.unsigned)).mul(t);
                o.isZero() && (o = v), r = r.add(o), e = e.sub(c);
            }
            return r;
        }, I.div = I.divide, I.modulo = function(t) {
            return d(t) || (t = p(t)), m ? g((this.unsigned ? m.rem_u : m.rem_s)(this.low, this.high, t.low, t.high), m.get_high(), this.unsigned) : this.sub(this.div(t).mul(t));
        }, I.mod = I.modulo, I.rem = I.modulo, I.not = function() {
            return g(~this.low, ~this.high, this.unsigned);
        }, I.and = function(t) {
            return d(t) || (t = p(t)), g(this.low & t.low, this.high & t.high, this.unsigned);
        }, I.or = function(t) {
            return d(t) || (t = p(t)), g(this.low | t.low, this.high | t.high, this.unsigned);
        }, I.xor = function(t) {
            return d(t) || (t = p(t)), g(this.low ^ t.low, this.high ^ t.high, this.unsigned);
        }, I.shiftLeft = function(t) {
            return d(t) && (t = t.toInt()), 0 == (t &= 63) ? this : t < 32 ? g(this.low << t, this.high << t | this.low >>> 32 - t, this.unsigned) : g(0, this.low << t - 32, this.unsigned);
        }, I.shl = I.shiftLeft, I.shiftRight = function(t) {
            return d(t) && (t = t.toInt()), 0 == (t &= 63) ? this : t < 32 ? g(this.low >>> t | this.high << 32 - t, this.high >> t, this.unsigned) : g(this.high >> t - 32, 0 <= this.high ? 0 : -1, this.unsigned);
        }, I.shr = I.shiftRight, I.shiftRightUnsigned = function(t) {
            var e;
            return d(t) && (t = t.toInt()), 0 == (t &= 63) ? this : (e = this.high, 
            t < 32 ? g(this.low >>> t | e << 32 - t, e >>> t, this.unsigned) : g(32 === t ? e : e >>> t - 32, 0, this.unsigned));
        }, I.shru = I.shiftRightUnsigned, I.shr_u = I.shiftRightUnsigned, I.toSigned = function() {
            return this.unsigned ? g(this.low, this.high, !1) : this;
        }, I.toUnsigned = function() {
            return this.unsigned ? this : g(this.low, this.high, !0);
        }, I.toBytes = function(t) {
            return t ? this.toBytesLE() : this.toBytesBE();
        }, I.toBytesLE = function() {
            var t = this.high, e = this.low;
            return [ 255 & e, e >>> 8 & 255, e >>> 16 & 255, e >>> 24, 255 & t, t >>> 8 & 255, t >>> 16 & 255, t >>> 24 ];
        }, I.toBytesBE = function() {
            var t = this.high, e = this.low;
            return [ t >>> 24, t >>> 16 & 255, t >>> 8 & 255, 255 & t, e >>> 24, e >>> 16 & 255, e >>> 8 & 255, 255 & e ];
        }, i.fromBytes = function(t, e, r) {
            return r ? i.fromBytesLE(t, e) : i.fromBytesBE(t, e);
        }, i.fromBytesLE = function(t, e) {
            return new i(t[0] | t[1] << 8 | t[2] << 16 | t[3] << 24, t[4] | t[5] << 8 | t[6] << 16 | t[7] << 24, e);
        }, i.fromBytesBE = function(t, e) {
            return new i(t[4] << 24 | t[5] << 16 | t[6] << 8 | t[7], t[0] << 24 | t[1] << 16 | t[2] << 8 | t[3], e);
        };
    } ], n = {}, i.m = r, i.c = n, i.d = function(t, e, r) {
        i.o(t, e) || Object.defineProperty(t, e, {
            configurable: !1,
            enumerable: !0,
            get: r
        });
    }, i.n = function(t) {
        var e = t && t.__esModule ? function() {
            return t.default;
        } : function() {
            return t;
        };
        return i.d(e, "a", e), e;
    }, i.o = function(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e);
    }, i.p = "", i(i.s = 0);
    function i(t) {
        var e;
        return (n[t] || (e = n[t] = {
            i: t,
            l: !1,
            exports: {}
        }, r[t].call(e.exports, e, e.exports, i), e.l = !0, e)).exports;
    }
    var r, n;
}), !function(e, r) {
    "use strict";
    "object" == typeof exports ? (e.slip = exports, r(exports)) : "function" == typeof define && define.amd ? define([ "exports" ], function(t) {
        return e.slip = t, e.slip, r(t);
    }) : (e.slip = {}, r(e.slip));
}(this, function(t) {
    "use strict";
    var o = t, t = (o.END = 192, o.ESC = 219, o.ESC_END = 220, o.ESC_ESC = 221, 
    o.byteArray = function(t, e, r) {
        return t instanceof ArrayBuffer ? new Uint8Array(t, e, r) : t;
    }, o.expandByteArray = function(t) {
        var e = new Uint8Array(2 * t.length);
        return e.set(t), e;
    }, o.sliceByteArray = function(t, e, r) {
        t = t.buffer.slice ? t.buffer.slice(e, r) : t.subarray(e, r);
        return new Uint8Array(t);
    }, o.encode = function(t, e) {
        (e = e || {}).bufferPadding = e.bufferPadding || 4;
        var e = (t = o.byteArray(t, e.offset, e.byteLength)).length + e.bufferPadding + 3 & -4, r = new Uint8Array(e), i = 1;
        r[0] = o.END;
        for (var n = 0; n < t.length; n++) {
            i > r.length - 3 && (r = o.expandByteArray(r));
            var s = t[n];
            s === o.END ? (r[i++] = o.ESC, s = o.ESC_END) : s === o.ESC && (r[i++] = o.ESC, 
            s = o.ESC_ESC), r[i++] = s;
        }
        return r[i] = o.END, o.sliceByteArray(r, 0, i + 1);
    }, o.Decoder = function(t) {
        this.maxMessageSize = (t = "function" != typeof t ? t || {} : {
            onMessage: t
        }).maxMessageSize || 10485760, this.bufferSize = t.bufferSize || 1024, this.msgBuffer = new Uint8Array(this.bufferSize), 
        this.msgBufferIdx = 0, this.onMessage = t.onMessage, this.onError = t.onError, 
        this.escape = !1;
    }, o.Decoder.prototype);
    return t.decode = function(t) {
        var e;
        t = o.byteArray(t);
        for (var r = 0; r < t.length; r++) {
            var i = t[r];
            if (this.escape) i === o.ESC_ESC ? i = o.ESC : i === o.ESC_END && (i = o.END); else {
                if (i === o.ESC) {
                    this.escape = !0;
                    continue;
                }
                if (i === o.END) {
                    e = this.handleEnd();
                    continue;
                }
            }
            this.addByte(i) || this.handleMessageMaxError();
        }
        return e;
    }, t.handleMessageMaxError = function() {
        this.onError && this.onError(this.msgBuffer.subarray(0), "The message is too large; the maximum message size is " + this.maxMessageSize / 1024 + "KB. Use a larger maxMessageSize if necessary."), 
        this.msgBufferIdx = 0, this.escape = !1;
    }, t.addByte = function(t) {
        return this.msgBufferIdx > this.msgBuffer.length - 1 && (this.msgBuffer = o.expandByteArray(this.msgBuffer)), 
        this.msgBuffer[this.msgBufferIdx++] = t, this.escape = !1, this.msgBuffer.length < this.maxMessageSize;
    }, t.handleEnd = function() {
        var t;
        if (0 !== this.msgBufferIdx) return t = o.sliceByteArray(this.msgBuffer, 0, this.msgBufferIdx), 
        this.onMessage && this.onMessage(t), this.msgBufferIdx = 0, t;
    }, o;
}), !function(t) {
    "use strict";
    function e() {}
    var r = e.prototype, i = t.EventEmitter;
    function s(t, e) {
        for (var r = t.length; r--; ) if (t[r].listener === e) return r;
        return -1;
    }
    function n(t) {
        return function() {
            return this[t].apply(this, arguments);
        };
    }
    r.getListeners = function(t) {
        var e, r, i = this._getEvents();
        if (t instanceof RegExp) for (r in e = {}, i) i.hasOwnProperty(r) && t.test(r) && (e[r] = i[r]); else e = i[t] || (i[t] = []);
        return e;
    }, r.flattenListeners = function(t) {
        for (var e = [], r = 0; r < t.length; r += 1) e.push(t[r].listener);
        return e;
    }, r.getListenersAsObject = function(t) {
        var e, r = this.getListeners(t);
        return r instanceof Array && ((e = {})[t] = r), e || r;
    }, r.addListener = function(t, e) {
        if (!function t(e) {
            return "function" == typeof e || e instanceof RegExp || !(!e || "object" != typeof e) && t(e.listener);
        }(e)) throw new TypeError("listener must be a function");
        var r, i = this.getListenersAsObject(t), n = "object" == typeof e;
        for (r in i) i.hasOwnProperty(r) && -1 === s(i[r], e) && i[r].push(n ? e : {
            listener: e,
            once: !1
        });
        return this;
    }, r.on = n("addListener"), r.addOnceListener = function(t, e) {
        return this.addListener(t, {
            listener: e,
            once: !0
        });
    }, r.once = n("addOnceListener"), r.defineEvent = function(t) {
        return this.getListeners(t), this;
    }, r.defineEvents = function(t) {
        for (var e = 0; e < t.length; e += 1) this.defineEvent(t[e]);
        return this;
    }, r.removeListener = function(t, e) {
        var r, i, n = this.getListenersAsObject(t);
        for (i in n) n.hasOwnProperty(i) && -1 !== (r = s(n[i], e)) && n[i].splice(r, 1);
        return this;
    }, r.off = n("removeListener"), r.addListeners = function(t, e) {
        return this.manipulateListeners(!1, t, e);
    }, r.removeListeners = function(t, e) {
        return this.manipulateListeners(!0, t, e);
    }, r.manipulateListeners = function(t, e, r) {
        var i, n, s = t ? this.removeListener : this.addListener, o = t ? this.removeListeners : this.addListeners;
        if ("object" != typeof e || e instanceof RegExp) for (i = r.length; i--; ) s.call(this, e, r[i]); else for (i in e) e.hasOwnProperty(i) && (n = e[i]) && ("function" == typeof n ? s : o).call(this, i, n);
        return this;
    }, r.removeEvent = function(t) {
        var e, r = typeof t, i = this._getEvents();
        if ("string" == r) delete i[t]; else if (t instanceof RegExp) for (e in i) i.hasOwnProperty(e) && t.test(e) && delete i[e]; else delete this._events;
        return this;
    }, r.removeAllListeners = n("removeEvent"), r.emitEvent = function(t, e) {
        var r, i, n, s, o = this.getListenersAsObject(t);
        for (s in o) if (o.hasOwnProperty(s)) for (r = o[s].slice(0), n = 0; n < r.length; n++) !0 === (i = r[n]).once && this.removeListener(t, i.listener), 
        i.listener.apply(this, e || []) === this._getOnceReturnValue() && this.removeListener(t, i.listener);
        return this;
    }, r.trigger = n("emitEvent"), r.emit = function(t) {
        var e = Array.prototype.slice.call(arguments, 1);
        return this.emitEvent(t, e);
    }, r.setOnceReturnValue = function(t) {
        return this._onceReturnValue = t, this;
    }, r._getOnceReturnValue = function() {
        return !this.hasOwnProperty("_onceReturnValue") || this._onceReturnValue;
    }, r._getEvents = function() {
        return this._events || (this._events = {});
    }, e.noConflict = function() {
        return t.EventEmitter = i, e;
    }, "function" == typeof define && define.amd ? define(function() {
        return e;
    }) : "object" == typeof module && module.exports ? module.exports = e : t.EventEmitter = e;
}("undefined" != typeof window ? window : this || {}), osc || require("./osc.js")), slip = slip || require("slip"), EventEmitter = EventEmitter || require("events").EventEmitter, osc = (!function() {
    "use strict";
    osc.supportsSerial = !1, osc.firePacketEvents = function(t, e, r, i) {
        e.address ? t.emit("message", e, r, i) : osc.fireBundleEvents(t, e, r, i);
    }, osc.fireBundleEvents = function(t, e, r, i) {
        t.emit("bundle", e, r, i);
        for (var n = 0; n < e.packets.length; n++) {
            var s = e.packets[n];
            osc.firePacketEvents(t, s, e.timeTag, i);
        }
    }, osc.fireClosedPortSendError = function(t, e) {
        t.emit("error", e = e || "Can't send packets on a closed osc.Port object. Please open (or reopen) this Port by calling open().");
    }, osc.Port = function(t) {
        this.options = t || {}, this.on("data", this.decodeOSC.bind(this));
    };
    var t = osc.Port.prototype = Object.create(EventEmitter.prototype);
    t.constructor = osc.Port, t.send = function(t) {
        var e = Array.prototype.slice.call(arguments), t = this.encodeOSC(t), t = osc.nativeBuffer(t);
        e[0] = t, this.sendRaw.apply(this, e);
    }, t.encodeOSC = function(t) {
        var e;
        t = t.buffer || t;
        try {
            e = osc.writePacket(t, this.options);
        } catch (t) {
            this.emit("error", t);
        }
        return e;
    }, t.decodeOSC = function(t, e) {
        t = osc.byteArray(t), this.emit("raw", t, e);
        try {
            var r = osc.readPacket(t, this.options);
            this.emit("osc", r, e), osc.firePacketEvents(this, r, void 0, e);
        } catch (t) {
            this.emit("error", t);
        }
    }, osc.SLIPPort = function(t) {
        var e = this, t = this.options = t || {}, t = (t.useSLIP = void 0 === t.useSLIP || t.useSLIP, 
        this.decoder = new slip.Decoder({
            onMessage: this.decodeOSC.bind(this),
            onError: function(t) {
                e.emit("error", t);
            }
        }), t.useSLIP ? this.decodeSLIPData : this.decodeOSC);
        this.on("data", t.bind(this));
    }, (t = osc.SLIPPort.prototype = Object.create(osc.Port.prototype)).constructor = osc.SLIPPort, 
    t.encodeOSC = function(t) {
        t = t.buffer || t;
        try {
            var e = osc.writePacket(t, this.options), r = slip.encode(e);
        } catch (t) {
            this.emit("error", t);
        }
        return r;
    }, t.decodeSLIPData = function(t, e) {
        this.decoder.decode(t, e);
    }, osc.relay = function(t, e, r, i, n, s) {
        r = r || "message", i = i || "send", n = n || function() {}, s = s ? [ null ].concat(s) : [];
        function o(t) {
            s[0] = t, t = n(t), e[i].apply(e, s);
        }
        return t.on(r, o), {
            eventName: r,
            listener: o
        };
    }, osc.relayPorts = function(t, e, r) {
        var i = r.raw ? "raw" : "osc", n = r.raw ? "sendRaw" : "send";
        return osc.relay(t, e, i, n, r.transform);
    }, osc.stopRelaying = function(t, e) {
        t.removeListener(e.eventName, e.listener);
    }, osc.Relay = function(t, e, r) {
        (this.options = r || {}).raw = !1, this.port1 = t, this.port2 = e, this.listen();
    }, (t = osc.Relay.prototype = Object.create(EventEmitter.prototype)).constructor = osc.Relay, 
    t.open = function() {
        this.port1.open(), this.port2.open();
    }, t.listen = function() {
        this.port1Spec && this.port2Spec && this.close(), this.port1Spec = osc.relayPorts(this.port1, this.port2, this.options), 
        this.port2Spec = osc.relayPorts(this.port2, this.port1, this.options);
        var t = this.close.bind(this);
        this.port1.on("close", t), this.port2.on("close", t);
    }, t.close = function() {
        osc.stopRelaying(this.port1, this.port1Spec), osc.stopRelaying(this.port2, this.port2Spec), 
        this.emit("close", this.port1, this.port2);
    }, "undefined" != typeof module && module.exports && (module.exports = osc);
}(), osc || require("./osc.js"));

!function() {
    "use strict";
    osc.WebSocket = "undefined" != typeof WebSocket ? WebSocket : require("ws"), 
    osc.WebSocketPort = function(t) {
        osc.Port.call(this, t), this.on("open", this.listen.bind(this)), this.socket = t.socket, 
        this.socket && (1 === this.socket.readyState ? (osc.WebSocketPort.setupSocketForBinary(this.socket), 
        this.emit("open", this.socket)) : this.open());
    };
    var t = osc.WebSocketPort.prototype = Object.create(osc.Port.prototype);
    t.constructor = osc.WebSocketPort, t.open = function() {
        (!this.socket || 1 < this.socket.readyState) && (this.socket = new osc.WebSocket(this.options.url)), 
        osc.WebSocketPort.setupSocketForBinary(this.socket);
        var e = this;
        this.socket.onopen = function() {
            e.emit("open", e.socket);
        }, this.socket.onerror = function(t) {
            e.emit("error", t);
        };
    }, t.listen = function() {
        var e = this;
        this.socket.onmessage = function(t) {
            e.emit("data", t.data, t);
        }, this.socket.onclose = function(t) {
            e.emit("close", t);
        }, e.emit("ready");
    }, t.sendRaw = function(t) {
        this.socket && 1 === this.socket.readyState ? this.socket.send(t) : osc.fireClosedPortSendError(this);
    }, t.close = function(t, e) {
        this.socket.close(t, e);
    }, osc.WebSocketPort.setupSocketForBinary = function(t) {
        t.binaryType = osc.isNode ? "nodebuffer" : "arraybuffer";
    };
}();

(osc = osc || require("./osc.js")).supportsSerial = !0, function() {
    "use strict";
    osc.SerialPort = function(t) {
        if (!("serial" in navigator)) throw Error("Web serial not supported in your browser. Check https://developer.mozilla.org/en-US/docs/Web/API/Web_Serial_API#browser_compatibility for more info.");
        this.on("open", this.listen.bind(this)), osc.SLIPPort.call(this, t), this.options.bitrate = this.options.bitrate || 9600, 
        this.serialPort = t.serialPort, this.serialPort && this.emit("open", this.serialPort);
    };
    var t = osc.SerialPort.prototype = Object.create(osc.SLIPPort.prototype);
    t.constructor = osc.SerialPort, t.open = async function() {
        if (this.serialPort) this.once("close", this.open.bind(this)), this.close(); else try {
            this.serialPort = await navigator.serial.requestPort(), await this.serialPort.open(this.options), 
            this.serialPort.isOpen = !0, this.emit("open", this.serialPort);
        } catch (t) {
            this.serialPort.isOpen = !1, this.emit("error", t);
        }
    }, t.listen = async function() {
        for (;this.serialPort.readable; ) {
            var t = this.serialPort.readable.getReader();
            try {
                for (;;) {
                    var {
                        value: e,
                        done: r
                    } = await t.read();
                    if (r) break;
                    this.emit("data", e, void 0);
                }
            } catch (t) {
                this.emit("error", t);
            } finally {
                t.releaseLock();
            }
        }
        this.emit("ready");
    }, t.messageQueue = [], t.isWriting = !1, t.sendRaw = async function(t) {
        if (this.serialPort && this.serialPort.isOpen) {
            if (this.messageQueue.push(t), !this.isWriting) {
                this.isWriting = !0;
                for (var e = this.serialPort.writable.getWriter(); 0 < this.messageQueue.length; ) {
                    var r = this.messageQueue.shift();
                    try {
                        await e.write(r);
                    } catch (t) {
                        console.error(t), this.emit("error", t);
                    }
                }
                e.releaseLock(), this.isWriting = !1;
            }
        } else osc.fireClosedPortSendError(this);
    }, t.close = function() {
        this.serialPort && (this.serialPort.close(), this.serialPort.isOpen = !1);
    };
}(), osc = osc || {};

!function() {
    "use strict";
    osc.listenToTransport = function(e, t, r) {
        t.onReceive.addListener(function(t) {
            t[r] === e[r] && e.emit("data", t.data, t);
        }), t.onReceiveError.addListener(function(t) {
            e.emit("error", t);
        }), e.emit("ready");
    }, osc.emitNetworkError = function(t, e) {
        t.emit("error", "There was an error while opening the UDP socket connection. Result code: " + e);
    }, osc.SerialPort = function(t) {
        this.on("open", this.listen.bind(this)), osc.SLIPPort.call(this, t), this.connectionId = this.options.connectionId, 
        this.connectionId && this.emit("open", this.connectionId);
    };
    var t = osc.SerialPort.prototype = Object.create(osc.SLIPPort.prototype);
    t.constructor = osc.SerialPort, osc.supportsSerial = !0, t.open = function() {
        var e = this, t = {
            bitrate: e.options.bitrate
        };
        chrome.serial.connect(this.options.devicePath, t, function(t) {
            e.connectionId = t.connectionId, e.emit("open", t);
        });
    }, t.listen = function() {
        osc.listenToTransport(this, chrome.serial, "connectionId");
    }, t.sendRaw = function(t) {
        var r;
        this.connectionId ? (r = this, chrome.serial.send(this.connectionId, t.buffer, function(t, e) {
            e && r.emit("error", e + ". Total bytes sent: " + t);
        })) : osc.fireClosedPortSendError(this);
    }, t.close = function() {
        var e;
        this.connectionId && (e = this, chrome.serial.disconnect(this.connectionId, function(t) {
            t && e.emit("close");
        }));
    }, osc.UDPPort = function(t) {
        osc.Port.call(this, t);
        t = this.options;
        t.localAddress = t.localAddress || "127.0.0.1", t.localPort = void 0 !== t.localPort ? t.localPort : 57121, 
        this.on("open", this.listen.bind(this)), this.socketId = t.socketId, this.socketId && this.emit("open", 0);
    }, (t = osc.UDPPort.prototype = Object.create(osc.Port.prototype)).constructor = osc.UDPPort, 
    t.open = function() {
        var t, e;
        this.socketId || (t = {
            persistent: (t = this.options).persistent,
            name: t.name,
            bufferSize: t.bufferSize
        }, e = this, chrome.sockets.udp.create(t, function(t) {
            e.socketId = t.socketId, e.bindSocket();
        }));
    }, t.bindSocket = function() {
        var e = this, t = this.options;
        void 0 !== t.broadcast && chrome.sockets.udp.setBroadcast(this.socketId, t.broadcast, function(t) {
            t < 0 && e.emit("error", new Error("An error occurred while setting the socket's broadcast flag. Result code: " + t));
        }), void 0 !== t.multicastTTL && chrome.sockets.udp.setMulticastTimeToLive(this.socketId, t.multicastTTL, function(t) {
            t < 0 && e.emit("error", new Error("An error occurred while setting the socket's multicast time to live flag. Result code: " + t));
        }), chrome.sockets.udp.bind(this.socketId, t.localAddress, t.localPort, function(t) {
            0 < t ? osc.emitNetworkError(e, t) : e.emit("open", t);
        });
    }, t.listen = function() {
        var t = this.options;
        osc.listenToTransport(this, chrome.sockets.udp, "socketId"), t.multicastMembership && ("string" == typeof t.multicastMembership && (t.multicastMembership = [ t.multicastMembership ]), 
        t.multicastMembership.forEach(function(e) {
            chrome.sockets.udp.joinGroup(this.socketId, e, function(t) {
                t < 0 && this.emit("error", new Error("There was an error while trying to join the multicast group " + e + ". Result code: " + t));
            });
        }));
    }, t.sendRaw = function(t, e, r) {
        var i, n;
        this.socketId ? (i = this.options, n = this, e = e || i.remoteAddress, r = void 0 !== r ? r : i.remotePort, 
        chrome.sockets.udp.send(this.socketId, t.buffer, e, r, function(t) {
            t || n.emit("error", "There was an unknown error while trying to send a UDP message. Have you declared the appropriate udp send permissions in your application's manifest file?"), 
            0 < t.resultCode && osc.emitNetworkError(n, t.resultCode);
        })) : osc.fireClosedPortSendError(this);
    }, t.close = function() {
        var t;
        this.socketId && (t = this, chrome.sockets.udp.close(this.socketId, function() {
            t.emit("close");
        }));
    };
}();